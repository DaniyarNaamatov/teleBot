from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup

from config import bot

# states —Å–æ—Å—Ç–æ—è–Ω–∏–∏
class FSMAdmin(StatesGroup):
    photo = State()
    dish_name = State()
    Descriptions = State()
    price = State()
    region = State()

                                        ##–º–µ–Ω—é##
async def hello(message: types.Message):
    await FSMAdmin.photo.set()
    await message.reply('–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –±–ª—é–¥–æ üçùüçù')

#–∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ
async def load_photo(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['photo'] = message.photo[0].file_id
    await FSMAdmin.next()
    await message.reply("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–æ 	üçî")


#–æ–ø–∏—Å–∞–Ω–∏–µ –±–ª—é–¥–æ
async def load_name(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['dish_name'] = message.text
    await FSMAdmin.next()
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ ‚úè")

# —Ü–µ–Ω–∞
async def load_Des(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['Descriptions'] = message.text
    await FSMAdmin.next()
    await message.reply("–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É üíµ")


async def load_price(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['price'] = float(message.text)

        await state.finish()
        await bot.send_message(message.chat.id, "–í—Å–µ –≤–∞—à –∑–∞–∫–∞–∑ –∑–∞–ø–∏—à–µ–Ω 	‚úÖ")



async def cancal_reg(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    else:
        await state.finish()
        await message.reply("–û–ö")

def register_hendler_fsmAdminGetUser(dp: Dispatcher):
    dp.register_message_handler(cancal_reg, state="*", commands="cancel")
    dp.register_message_handler(cancal_reg, Text(equals='cancel', ignore_case=True),state="*")

    dp.register_message_handler(hello, commands=["dish"])
    dp.register_message_handler(load_photo, state=FSMAdmin.photo, content_types=["photo"])
    dp.register_message_handler(load_name, state=FSMAdmin.dish_name)
    dp.register_message_handler(load_Des, state=FSMAdmin.Descriptions)
    dp.register_message_handler(load_price, state=FSMAdmin.price)
